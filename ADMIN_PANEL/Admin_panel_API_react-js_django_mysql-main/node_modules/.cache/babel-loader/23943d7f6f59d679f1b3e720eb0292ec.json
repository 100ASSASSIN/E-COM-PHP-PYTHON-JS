{"ast":null,"code":"var _jsxFileName = \"/home/assassin/GIT/Admin_panel_API/src/view_panel/items_all.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './icons/tab.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Items = () => {\n  _s();\n\n  const [apiData, setApiData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:8000/api/Items_li/\");\n        const data = await response.json(); // Assuming your API response structure is as shown in your example\n\n        setApiData(data.message); // Set the entire array\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []); // Empty dependency array to run effect only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"font-sans\",\n    children: apiData !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: apiData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border border-gray-300 rounded-lg mb-4 p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-semibold\",\n            children: [\"ID: \", item.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/jpeg;base64,${item.image}`,\n            alt: item.filename,\n            style: {\n              maxWidth: '20%',\n              height: '10%',\n              marginTop: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Name: \", item.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: $\", item.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Filename: \", item.filename]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Uploaded At: \", item.uploaded_at]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Items, \"noAg7g3YD8y0s3I7k2yGkzb25Kw=\");\n\n_c = Items;\nexport default Items;\n\nvar _c;\n\n$RefreshReg$(_c, \"Items\");","map":{"version":3,"names":["React","useState","useEffect","Items","apiData","setApiData","fetchData","response","fetch","data","json","message","error","console","map","item","id","image","filename","maxWidth","height","marginTop","name","price","uploaded_at"],"sources":["/home/assassin/GIT/Admin_panel_API/src/view_panel/items_all.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './icons/tab.css'\nconst Items = () => {\n  const [apiData, setApiData] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:8000/api/Items_li/\");\n        const data = await response.json();\n        // Assuming your API response structure is as shown in your example\n        setApiData(data.message); // Set the entire array\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []); // Empty dependency array to run effect only once on mount\n\n  return (\n    <div className=\"font-sans\">\n      {apiData !== null ? (\n        <div>\n          {apiData.map((item) => (\n            <div key={item.id} className=\"border border-gray-300 rounded-lg mb-4 p-4\">\n              <div className=\"flex items-center justify-between\">\n                <p className=\"font-semibold\">ID: {item.id}</p>\n                <img src={`data:image/jpeg;base64,${item.image}`} alt={item.filename} style={{ maxWidth: '20%', height: '10%', marginTop: '10px' }} />\n              </div>\n              <div>\n                <p>Name: {item.name}</p>\n                <p>Price: ${item.price}</p>\n                <p>Filename: {item.filename}</p>\n                <p>Uploaded At: {item.uploaded_at}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Items;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,iBAAP;;;AACA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAClB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,IAAD,CAAtC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMI,SAAS,GAAG,YAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAD,CAA5B;QACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB,CAFE,CAGF;;QACAL,UAAU,CAACI,IAAI,CAACE,OAAN,CAAV,CAJE,CAIwB;MAC3B,CALD,CAKE,OAAOC,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;MACD;IACF,CATD;;IAWAN,SAAS;EACV,CAbQ,EAaN,EAbM,CAAT,CAHkB,CAgBV;;EAER,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,UACGF,OAAO,KAAK,IAAZ,gBACC;MAAA,UACGA,OAAO,CAACU,GAAR,CAAaC,IAAD,iBACX;QAAmB,SAAS,EAAC,4CAA7B;QAAA,wBACE;UAAK,SAAS,EAAC,mCAAf;UAAA,wBACE;YAAG,SAAS,EAAC,eAAb;YAAA,mBAAkCA,IAAI,CAACC,EAAvC;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAK,GAAG,EAAG,0BAAyBD,IAAI,CAACE,KAAM,EAA/C;YAAkD,GAAG,EAAEF,IAAI,CAACG,QAA5D;YAAsE,KAAK,EAAE;cAAEC,QAAQ,EAAE,KAAZ;cAAmBC,MAAM,EAAE,KAA3B;cAAkCC,SAAS,EAAE;YAA7C;UAA7E;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAKE;UAAA,wBACE;YAAA,qBAAUN,IAAI,CAACO,IAAf;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA,uBAAYP,IAAI,CAACQ,KAAjB;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAA,yBAAcR,IAAI,CAACG,QAAnB;UAAA;YAAA;YAAA;YAAA;UAAA,QAHF,eAIE;YAAA,4BAAiBH,IAAI,CAACS,WAAtB;UAAA;YAAA;YAAA;YAAA;UAAA,QAJF;QAAA;UAAA;UAAA;UAAA;QAAA,QALF;MAAA,GAAUT,IAAI,CAACC,EAAf;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QADD,gBAkBC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAnBJ;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD,CA1CD;;GAAMb,K;;KAAAA,K;AA4CN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}