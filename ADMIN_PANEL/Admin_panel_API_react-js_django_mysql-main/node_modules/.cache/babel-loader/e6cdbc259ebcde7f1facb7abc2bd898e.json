{"ast":null,"code":"var _jsxFileName = \"/home/assassin/GIT/Admin_panel_API/src/view_panel/items_all.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './icons/tab.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst navigate = () => {\n  window.location.replace(\"/assassin\");\n};\n\nconst Items = () => {\n  _s();\n\n  const [apiData, setApiData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:8000/api/Items_li/\");\n        const data = await response.json(); // Assuming your API response structure is as shown in your example\n\n        setApiData(data.message); // Set the entire array\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []); // Empty dependency array to run effect only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"font-sans\",\n    children: apiData !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: apiData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-sans overflow-y-scroll scrollbar-track-gray-200 scrollbar-thumb-gray-500 scrollbar-thumb-rounded hover:scrollbar-thumb-gray-800\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border border-gray-300 rounded-lg mb-4 p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-semibold\",\n                children: [\"ID: \", item.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Name: \", item.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Price: $\", item.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Filename: \", item.filename]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Uploaded At: \", item.uploaded_at]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                id: \"fd\",\n                src: `data:image/jpeg;base64,${item.image}`,\n                alt: item.filename,\n                style: {\n                  maxWidth: '50%',\n                  height: '50%',\n                  marginTop: '10px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"ut2\",\n          type: \"submit\",\n          style: buttonStyle,\n          onClick: () => navigate(-1),\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Items, \"noAg7g3YD8y0s3I7k2yGkzb25Kw=\");\n\n_c = Items;\nconst buttonStyle = {\n  padding: '10px 20px',\n  backgroundColor: '#007bff',\n  color: '#fff',\n  border: 'none',\n  borderRadius: '4px',\n  cursor: 'pointer'\n};\nexport default Items;\n\nvar _c;\n\n$RefreshReg$(_c, \"Items\");","map":{"version":3,"names":["React","useState","useEffect","navigate","window","location","replace","Items","apiData","setApiData","fetchData","response","fetch","data","json","message","error","console","map","item","id","name","price","filename","uploaded_at","image","maxWidth","height","marginTop","buttonStyle","padding","backgroundColor","color","border","borderRadius","cursor"],"sources":["/home/assassin/GIT/Admin_panel_API/src/view_panel/items_all.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './icons/tab.css'\n\nconst navigate = () => {\n    window.location.replace(\"/assassin\");\n}\n\nconst Items = () => {\n  const [apiData, setApiData] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:8000/api/Items_li/\");\n        const data = await response.json();\n        // Assuming your API response structure is as shown in your example\n        setApiData(data.message); // Set the entire array\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []); // Empty dependency array to run effect only once on mount\n\n  return (\n    <div className=\"font-sans\">\n      {apiData !== null ? (\n        <div>\n          {apiData.map((item) => (\n            <div className=\"font-sans overflow-y-scroll scrollbar-track-gray-200 scrollbar-thumb-gray-500 scrollbar-thumb-rounded hover:scrollbar-thumb-gray-800\">\n            <div key={item.id} className=\"border border-gray-300 rounded-lg mb-4 p-4\">\n              <div className=\"flex items-center justify-between\">\n              <div className=\"flex\">\n                <p className=\"font-semibold\">ID: {item.id}</p>\n                <p>Name: {item.name}</p>\n                <p>Price: ${item.price}</p>\n                <p>Filename: {item.filename}</p>\n                <p>Uploaded At: {item.uploaded_at}</p>\n                <img id=\"fd\" src={`data:image/jpeg;base64,${item.image}`} alt={item.filename} style={{ maxWidth: '50%', height: '50%', marginTop: '10px' }} />\n              </div>\n              </div>\n              </div>\n              \n               <button id=\"ut2\" type=\"submit\" style={buttonStyle} onClick={() => navigate(-1)}>\n                Go Back\n            </button>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n};\n\n\nconst buttonStyle = {\n    padding: '10px 20px',\n    backgroundColor: '#007bff',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n};\n\n\nexport default Items;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}