{"ast":null,"code":"const handleSubmit = async event => {\n  event.preventDefault();\n  const formData = new FormData();\n  formData.append('name', name);\n  formData.append('price', price);\n  formData.append('file', file); // Add filename to form data\n\n  formData.append('filename', file.name); // Read the content of the file and convert it to base64\n\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onloadend = () => {\n    const base64data = reader.result.split(',')[1];\n    formData.append('image_data', base64data); // Send the form data to the server\n\n    fetch('http://127.0.0.1:8000/api/ben/', {\n      method: 'POST',\n      body: formData\n    }).then(response => {\n      if (response.ok) {\n        alert('Product uploaded successfully!'); // Clear form fields after successful upload\n\n        setName('');\n        setPrice('');\n        setFile(null);\n      } else {\n        return response.json().then(errorData => {\n          throw new Error(errorData.detail);\n        });\n      }\n    }).catch(error => {\n      alert('Error: ' + error.message);\n    });\n  };\n};","map":{"version":3,"names":["handleSubmit","event","preventDefault","formData","FormData","append","name","price","file","reader","FileReader","readAsDataURL","onloadend","base64data","result","split","fetch","method","body","then","response","ok","alert","setName","setPrice","setFile","json","errorData","Error","detail","catch","error","message"],"sources":["/home/assassin/GIT/Admin_panel_API/src/view_panel/upload/upload.jsx"],"sourcesContent":["const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('price', price);\n    formData.append('file', file);\n\n    // Add filename to form data\n    formData.append('filename', file.name);\n\n    // Read the content of the file and convert it to base64\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n        const base64data = reader.result.split(',')[1];\n        formData.append('image_data', base64data);\n\n        // Send the form data to the server\n        fetch('http://127.0.0.1:8000/api/ben/', {\n            method: 'POST',\n            body: formData\n        })\n        .then(response => {\n            if (response.ok) {\n                alert('Product uploaded successfully!');\n                // Clear form fields after successful upload\n                setName('');\n                setPrice('');\n                setFile(null);\n            } else {\n                return response.json().then(errorData => {\n                    throw new Error(errorData.detail);\n                });\n            }\n        })\n        .catch(error => {\n            alert('Error: ' + error.message);\n        });\n    };\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,KAAP,IAAiB;EAClCA,KAAK,CAACC,cAAN;EAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;EACAD,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBC,IAAxB;EACAH,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBE,KAAzB;EACAJ,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBG,IAAxB,EANkC,CAQlC;;EACAL,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BG,IAAI,CAACF,IAAjC,EATkC,CAWlC;;EACA,MAAMG,MAAM,GAAG,IAAIC,UAAJ,EAAf;EACAD,MAAM,CAACE,aAAP,CAAqBH,IAArB;;EACAC,MAAM,CAACG,SAAP,GAAmB,MAAM;IACrB,MAAMC,UAAU,GAAGJ,MAAM,CAACK,MAAP,CAAcC,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAnB;IACAZ,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8BQ,UAA9B,EAFqB,CAIrB;;IACAG,KAAK,CAAC,gCAAD,EAAmC;MACpCC,MAAM,EAAE,MAD4B;MAEpCC,IAAI,EAAEf;IAF8B,CAAnC,CAAL,CAICgB,IAJD,CAIMC,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACC,EAAb,EAAiB;QACbC,KAAK,CAAC,gCAAD,CAAL,CADa,CAEb;;QACAC,OAAO,CAAC,EAAD,CAAP;QACAC,QAAQ,CAAC,EAAD,CAAR;QACAC,OAAO,CAAC,IAAD,CAAP;MACH,CAND,MAMO;QACH,OAAOL,QAAQ,CAACM,IAAT,GAAgBP,IAAhB,CAAqBQ,SAAS,IAAI;UACrC,MAAM,IAAIC,KAAJ,CAAUD,SAAS,CAACE,MAApB,CAAN;QACH,CAFM,CAAP;MAGH;IACJ,CAhBD,EAiBCC,KAjBD,CAiBOC,KAAK,IAAI;MACZT,KAAK,CAAC,YAAYS,KAAK,CAACC,OAAnB,CAAL;IACH,CAnBD;EAoBH,CAzBD;AA0BH,CAxCD"},"metadata":{},"sourceType":"module"}